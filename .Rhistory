View(invA)
pen <- d('red', 'blue', 'black')
clear globalenv()
install.packages("leaps")
install.packages("MASS")
library(leaps)
library(caret)
help("trainControl")
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
read.csv(path2csv)
mydf<-read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
print(tbl_df(mydf))
print(tbl_df(cran))
print(cran)
cran
select(cran)
select()
help("select")
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-[5:20]
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
bye
bye()
setwd("/Users/gauravpuri/Downloads/Master Thesis Readings /")
credit <- read.csv("german_credit.csv", header = TRUE, sep = ",")
credit$Creditability <-as.factor(credit$Creditability)
credit$Age..years. <-as.numeric(credit$Age..years.)
credit$Credit.Amount<-as.double(credit$Credit.Amount)
credit$Credit.Amount<-as.factor(ifelse(credit$Credit.Amount<=2500,'0-2500',ifelse(credit$Credit.Amount<=5000,'2600-5000','5000+')))
d = sort(sample(nrow(credit), nrow(credit)*.6))
train<-credit[d,]
test<-credit[-d,]
train<-subset(train,select=TRUE)
m<-glm(Creditability~.,data=train,family=binomial())
library(ROCR)
test$score<-predict(m,type='response',test)
pred<-prediction(test$score,test$Creditability)
perf <- performance(pred,"tpr","fpr")
plot(perf)
View(test$score)
max(attr(perf,'y.values')[[1]]-attr(perf,'x.values')[[1]])
g<-predict(m,type='terms',test)
ftopk<- function(x,top=3){
res=names(x)[order(x, decreasing = TRUE)][1:top]
paste(res,collapse=";",sep="")
}
topk=apply(g,1,ftopk,top=3)
test<-cbind(test, topk)
View(topk)
test<-cbind(test, topk)
fit1<-rpart(Creditability~.,data=train)
library(rpart)
fit1<-rpart(Creditability~.,data=train)
plot(fit1);text(fit1);
setwd("/Users/gauravpuri/Downloads/Master Thesis Readings /")
credit <- read.csv("german_credit.csv", header = TRUE, sep = ",")
#code to convert variable to factor
credit$Creditability <-as.factor(credit$Creditability)
#code to convert to numeric
credit$Age..years. <-as.numeric(credit$Age..years.)
#code to convert to decimal
credit$Credit.Amount<-as.double(credit$Credit.Amount)
credit$Credit.Amount<-as.factor(ifelse(credit$Credit.Amount<=2500,'0-2500',ifelse(credit$Credit.Amount<=5000,'2600-5000','5000+')))
d = sort(sample(nrow(credit), nrow(credit)*.6))
#select training sample
train<-credit[d,]
test<-credit[-d,]
train<-subset(train,select=TRUE)
m<-glm(Creditability~.,data=train,family=binomial())
#load library
library(ROCR)
#score test data set
test$score<-predict(m,type='response',test)
View(test$score)
pred<-prediction(test$score,test$Creditability)
perf <- performance(pred,"tpr","fpr")
plot(perf)
#get results of terms in regression
g<-predict(m,type='terms',test)
#function to pick top 3 reasons
#works by sorting coefficient terms in equation
# and selecting top 3 in sort for each loan scored
ftopk<- function(x,top=3){
res=names(x)[order(x, decreasing = TRUE)][1:top]
paste(res,collapse=";",sep="")
}
# Application of the function using the top 3 rows
topk=apply(g,1,ftopk,top=3)
#get results of terms in regression
g<-predict(m,type='terms',test)
#function to pick top 3 reasons
#works by sorting coefficient terms in equation
# and selecting top 3 in sort for each loan scored
ftopk<- function(x,top=3){
res=names(x)[order(x, decreasing = TRUE)][1:top]
paste(res,collapse=";",sep="")
}
# Application of the function using the top 3 rows
topk=apply(g,1,ftopk,top=3)
summary(topk)
l <- topk
View(l)
test<-cbind(test, topk)
library(rpart)
fit1<-rpart(Creditability~.,data=train)
plot(fit1);text(fit1);
plot(fit1);text(fit1, scale(fit1, center = FALSE));
plot(fit1);text(fit1, scale(fit1, center = FALSE, scale = TRUE));
plot(fit1);text(fit1, scale(fit1, center = TRUE, scale = TRUE));
plot(fit1);text(fit1, scale(8, center = TRUE, scale = TRUE));
plot(fit1);text(fit1);
plot(fit1);text(fit1, strwidth(s[0.5]));
plot(fit1);text(fit1, font = 3 );
plot(fit1);text(fit1, font = 1 );
plot(fit1);text(fit1, font = 0.5 );
plot(fit1);text(fit1, font = 0.1 );
install.packages("synthpop")
getwd()
setwd("/Users/gauravpuri/Downloads/MasterThesis/")
data <- read.csv("german_credit.csv", header = TRUE, sep = ";")
help(synthpop)
help("synthpop")
help(synthpop)
syn(data = data, m = 3)
library(synthpop)
syn(data = data, m = 3)
dt <- read.csv("german_credit.csv", header = TRUE, sep = ";")
syn(data = dt)
dt <- read.csv("german_credit.csv", header = TRUE, sep = ",")
syn(data = dt)
trail1 <- syn(data = dt)
View(trail1)
View(credit)
trail1
View(credit)
trail1 <- sapply(as.numeric(trail1))
trail1 <- apply(as.numeric(trail1))
trail1 <- as.numeric(trail1)
trail1 <- as.data.frame.numeric(trail1)
View(trail1)
View(trail1)
trail1 <- as.data.frame.numeric(syn)
View(trail1)
trail1 <- as.data.frame.(trail1$syn)
trail1 <- as.data.frame(trail1$syn)
trail1 <- as.data.frame(trail1)
View(trail1)
library(synthpop)
setwd("/Users/gauravpuri/Downloads/MasterThesis/")
dt <- read.csv("german_credit.csv", header = TRUE, sep = ",")
trail1 <- syn(data = dt)
compare(trail1, ods, vars = Credit.Amount)
compare(trail1, vars = Credit.Amount)
compare(data = trail1, vars = Credit.Amount)
trail1$syn
